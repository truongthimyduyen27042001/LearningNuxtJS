I. T√¨m hi·ªÉu SPA v√† SSR
1. SPA : Signal Page Application 
- Th√¥ng tin ƒë∆∞·ª£c render m·ªôt l·∫ßn duy nh·∫•t tr√™n m·ªôt trang duy nh·∫•t
- Hi·ªáu qu·∫£ tr·∫£i nghi·ªám ng∆∞·ªùi d√πng cao h∆°n 
- C√≥ s·ª± ph√¢n chia c√¥ng vi·ªác r√µ r√†ng gi·ªØa FE v√† BE
- H·∫°n ch·∫ø truy v·∫•n ƒë·∫øn Serve
-> + TƒÉng tr·∫£i nghi·ªám ng∆∞·ªùi d√πng
+ Gi·∫£m thi·ªÉu th·ªùi gian ph√°t tri·ªÉn v√† chi ph√≠ h·∫° t·∫ßng
Vd: Gmail, GG map, Facebook, Twitter, Google Driver, ....
* Nh∆∞·ª£c ƒëi·ªÉm: 
- Kh√¥ng c√≥ √≠ch cho SEO 
- Bu·ªôc ph·∫£i k√≠ch ho·∫°t JS 
2. SSR 
- Khi ng∆∞·ªùi d√πng v√†o m·ªôt trang web, request s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn m√°y ch·ªß v√† sau 
ƒë√≥ database s·∫Ω render html v√† tr·∫£ v·ªÅ cho browser;
- Ng∆∞·ªùi d√πng n·∫øu mu·ªën y√™u c·∫ßu ch·ª©c nƒÉng kh√°c th√¨ trang web s·∫Ω reload
* ∆Øu ƒëi·ªÉm :
- Initial load nhanh, d·ªÖ t·ªëi ∆∞u v√¨ to√†n b·ªô d·ªØ li·ªáu ƒë∆∞·ª£c x·ª≠ l√Ω s·∫µn ·ªü Serve
- Kh√¥ng c·∫ßn t√°ch FE v√† BE 
- SEO t·ªët v√¨ bot GG c√≥ th·ªÉ ƒë·ªçc ƒë∆∞·ª£c html 
- C√≥ th·ªÉ kh√¥ng d√πng ƒë·∫øn JS 
---> Nh∆∞·ª£c ƒëi·ªÉm : 
+ Site s·∫Ω reaload l·∫°i nhi·ªÅu l·∫ßn
+ N·∫∑ng cho x·ª≠ l√Ω ·ªü serve 
+ T·ªën bƒÉng th√¥ng v√¨ serve g·ª≠i d·ªØ li·ªáu th·ª´a th√°i 
+ T∆∞∆°ng t√°c kh√¥ng t·ªët
II.. Code NuxtJS ( Serve Site Rendering)
1. Nuxtjs l√† g√¨ ? 
- Nuxt.js l√† m·ªôt framework js ƒë·ªÉ t·∫°o c√°c ·ª©ng d·ª•ng Universal Vue.js
- C√≥ r·∫•t nhi·ªÅu t√≠nh nƒÉng gi√∫p b·∫°n ph√°t tri·ªÉn gi·ªØa ph√≠a client v√† server nh∆∞ D·ªØ li·ªáu b·∫•t ƒë·ªìng b·ªô (Asynchronous Data), Middleware, Layouts, v.v.
2. C√°ch kh·ªüi t·∫°o 
- Yarn : yarn create nuxt-app <project-name>
- npm : npm init nuxt-app <project-name>

3. C·∫•u tr√∫c th∆∞ m·ª•c c·ªßa Nuxtjs
a. Assets
- un-compiled 
- S·ª≠ d·ª•ng webpack ƒë·ªÉ s·ª≠ l√Ω v√† complied. 
- Nh·ªØng th∆∞ m·ª•c con c√≥ th·ªÉ ƒë∆∞·ª£c d√πng 
+ css 
+ fonts 
+ img
+ scss (base, bootstrap-vue)
Ex : <img src="/image.jpg"/> 
b. Components
- Ph√¢n chia c√°c trang theo nh·ªØng thu·ªôc t√≠nh t∆∞∆°ng t·ª± nhau 
- Vd : common ( Auth, Plugins) ho·∫∑c uncommon( About, Home)
- Code : 
import Auth from "~/components/Auth";

export default {
    components: { 
    	Auth
    },
}
c. Layouts
- ƒê∆∞·ª£c d√πng ƒë·ªÉ thay ƒë·ªïi giao di·ªán ·ª©ng d·ª•ng 
- Chia ·ª©ng d·ª•ng th√†nh nhi·ªÅu layout 
- Vd : Defaul , Secret , Login, Register , ...
- Mu·ªën s·ª≠ d·ª•ng m·ªôt layouts th√¨ khai b√°o t·∫°i pages 
Code : 
<template>
  <!-- Your template -->
</template>

<script>
export default {
  layout: 'Login'
  // page component definitions
}
</script>
d. Middleware
- Ch·ª©a c√°c h√†m js t√πy ch·ªânh ch·∫°y ngay truowxc khi m·ªôt trang ƒë∆∞·ª£c hi·ªÉn th·ªã 
- T·∫°o code js : Vd ki·ªÉm tra d·ªØ li·ªáu c·ªßa m·ªôt user 
 T·∫°o ra file middleware/auth.js ƒë·ªÉ ki·ªÉm tra d·ªØ li·ªáu 
export default function({ store }) {
  // some code to check user authentication
}
- Sau khi code xong m·ªôt ch·ª©c nƒÉng, ph·∫£i khai b√°o cho Nuxjs bi·∫øt m√¨nh √°p d·ª•ng n√≥ ·ªü ƒë√¢u
+ C√°ch 1 : Global middleware - (Th√¥ng qua file c·∫•u h√¨nh Nuxt v√† ·∫£nh h∆∞·ªüng ƒë·∫øn t·∫•t c·∫£ c√°c route)
// nuxt.config.js 
export default {
  router: {
    middleware: 'auth'
  }
}
+ C√°ch 2 : Layout middleware (Th√¥ng qua layouts v√† ·∫£nh h∆∞·ªüng ƒë·∫øn nh√≥m c√°c route t∆∞∆°ng ·ª©ng, t·ª©c l√† c√°c trang s·ª≠ d·ª•ng layouts ƒë√≥ ch·ªâ ƒë∆∞·ª£c xem v√† truy c·∫≠p b·ªüi ng∆∞·ªùi d√πng ƒë√£ x√°c th·ª±c)
// layouts/default.vue
export default { 
  middleware: 'authenticated-basic-plan-user' 
}
+ C√°ch 3 : Page middleware (Th√¥ng qua t·ª´ng page v√† ·∫£nh h∆∞·ªüng tr√™n route g·ªçi ƒë·∫øn page ƒë√≥)
// pages/index.vue
export default { 
  middleware: 'subscribed'
}
e. Pages
- Th∆∞ m·ª•c quan tr·ªçng nh·∫•t c·ªßa Nuxtjs 
- T·ª± ƒë·ªông t·∫°o c√°c route b·∫•t k·ª≥ theo t·ª´ng file trong .vue 
- Ch·ª©a c√°c views v√† routers cho ·ª©ng d·ª•ng 
- M√¥ t·∫£ nh·ªØng g√¨ c·∫ßn ƒë·ªÉ c·∫•u h√¨nh d·ªØ li·ªáu v√† view cho m·ªôt router c·ª• th·ªÉ 
- T·∫•t c·∫£ file.vue trong th∆∞ m·ª•c ƒë·ªÅu ƒë∆∞·ª£c cung c√¢p asyncData, layout, middleware, auth, fetch, head, validate, scrollToTop c·∫•u h√¨nh
- File pages/index.vue ƒë√≥ng vai tr√≤ quan tr·ªçng l√† trang ch·ªß c·ªßa ·ª©ng d·ª•ng 
- T·∫°o url th√¢n thi·ªán v·ªõi SEO 
- Th∆∞ m·ª•c con c√≥ th·ªÉ : 
+ users 
+ users _id.vue 
+ blogs 
+ articels 
f. Plugins  
- ƒêƒÉng k√Ω global c√°c th∆∞ vi·ªán c√°c ·ª©ng d·ª•ng m√¨nh s·∫Ω d√πng trong code d·ª± √°n 
- Sau khi c√†i ƒë·∫∑t th∆∞ vi·ªán th√¨ m√¨nh s·∫Ω import tr·ª±c ti·∫øp 
- Code :
export default {
  plugins: ['~/plugins/vue-notifications']
}
Vue.use(VueNotifications)
g. Static
- ƒê·ª±ng nh·ªØng n·ªôi dung kh√¥ng thay ƒë·ªïi 
- Webpack b·ªè qua th∆∞ m·ª•c v√† kh√¥ng x·ª≠ l√Ω b·∫•t k√¨ th·ª© g√¨ 
- Trong code c·ªßa m√¨nh th√¨ c√≥ th·ªÉ tham chi·∫øu c√°c file t·ª´ root 
Ex : <img src="~/assets/image.jpg"/>
h. Store
- T·∫°o kho d·ªØ li·ªáu, x√°c ƒë·ªãnh h√†nh ƒë·ªông nuxtServerInit
- Khi ng∆∞·ªùi d√πng truy c·∫≠p l·∫ßn ƒë·∫ßu, fill/update d·ªØ li·ªáu v√†o store. 
- Cho ph√©p s·ª≠ d·ª•ng  modules, state, getters, mutations and actions
- C√≥ th·ªÉ ch·ª©a nhi·ªÅu store b·∫±ng c√°ch t·∫°o th√™m th∆∞ m·ª•c v√† config 
4. Life hook c·ªßa Nuxtjs 
B∆∞·ªõc 1 : nuxtServerInit 
- L√† m·ªôt action 
- ƒê∆∞·ª£c g·ªçi ngay khi Nuxjs b·∫Øt ƒë·∫ßu lifecycle 
- D√πng chung cho t·∫•t c·∫£ c√°c pages t·ª´ server v√†o store c·ªßa client 
- N·∫øu action tr·∫£ v·ªÅ Promise th√¨ nuxtjs s·∫Ω ch·ªù promise n√†y gi·∫£i quy·∫øt xong m·ªõi 
ti·∫øp t·ª•c th·ª±c hi·ªán ph∆∞∆°ng th·ª©c ti·∫øp theoo
- Code : 
// store/index.js
actions: {
  nuxtServerInit({ commit }, { req }) {
    if (req.session.user) {
      commit('setUser', req.session.user);
      return axios.get(`/users/${req.session.user}`).then((response) =>{
        commit('currentUserData', response.data);
      });
    }
  },
}
B∆∞·ªõc 2 : middleware
- Khai b√°o v√† th·ª±c hi·ªán c√°c h√†m tr∆∞·ªõc khi kh·ªüi t·∫°o page 
- C√≥ th·ªÉ s·ª≠ d·ª•ng global middleware trong nuxt.config.js cho t·∫•t c·∫£ pages ho·∫∑c pages c·ª• th·ªÉ 
b·∫±ng ph∆∞∆°ng th·ª©c middleware trong layout/page ƒë√≥ 
- C√≥ th·ªÉ t√°i s·ª≠ d·ª•ng ƒë∆∞·ª£c code n√™n l√† n∆°i t·ªët ƒë·ªÉ ki·ªÉm tra ƒëƒÉng nh·∫≠p ho·∫∑c l·∫•y d·ªØ li·ªáu chung cho pages 
- Quy ∆∞·ªõc th·ª© t·ª± ∆∞u ti√™n th·ª±c thi middleware 
+ nuxt.config.js
+ Layouts c√≥ middleware
+ Pages c√≥ middleware
- Code: 
// middleware/check-authenticate.js
export default function({ store, redirect }) {
  // Ch∆∞a ƒëƒÉng nh·∫≠p th√¨ ƒëu·ªïi v·ªÅ trang login üòõüòõ
  if (!store.state.authenticated) {
    return redirect('/login');
  }
}
// middleware/common-fetch.js
import axios from 'axios'

export default function ({ route }) { // üëà Tham s·ªë ƒë·∫ßu ti√™n l√† context n√®
  return axios.post('http://api-cua-tui.com', {
    url: route.fullPath
  });
}

B∆∞·ªõc 3 : validate
- ƒê∆∞·ª£c g·ªçi tr∆∞·ªõc m·ªói l·∫ßn chuy·ªÉn ƒë·∫øn route m∆∞·ªõi 
- Ki·ªÉm tra ph∆∞∆°ng th·ª©c ph√π h·ª£p nh·∫•t ƒë·ªÉ ki·ªÉm tra tham s·ªë v√† x√°c ƒë·ªãnh ƒëi·ªÅu h∆∞·ªõng
- Theo m·∫∑c ƒë·ªãnh s·∫Ω hi·ªÉn th·ªã trang 404 n·∫øu tr·∫£ v·ªÅ false ho·∫∑c trang 500 n·∫øu Error
Code : 
validate({ params, query, store }) {
  return true; // T·∫°o page component
  return false; // D·ª´ng render v√† hi·ªÉn th·ªã 404 cho zui
  throw new Error('L·ªói r·ªìi √¥ng √™i!'); // C≈©ng d·ª´ng render nh∆∞ng hi·ªÉn th·ªã 500
}
B∆∞·ªõc 4 : asyncData() & fetch()
a. Fetch()
- fetch() d√πng ƒë·ªÉ l∆∞u d·ªØ li·ªáu v√†o store tr∆∞·ªõc khi hi·ªÉn th·ªã page 
- Ch·ªâ √°p d·ª•ng cho 1 pages c·ª• th·ªÉ 
- N·∫øu tr·∫£ v·ªÅ promise th√¨ s·∫Ω ch·ªù ƒë·ª£i ƒë·ªÉ th·ª±c hi·ªán ƒë∆∞·ª£c 
// pages/products/_id.vue
export default {
  fetch(({ store, params }) {
    if (typeof (store.state.products.byId[params.id]) === 'undefined') {
      return store.dispatch('products/loadProduct', { id: params.id });
    };
  },
}
b. AsynchData ()
- T∆∞∆°ng t·ª± fetch()
- C√≥ th·ªÉ kh√¥ng l∆∞u d·ªØ li·ªáu v√†o store 
export default {
  asyncData({ params, error }) {
    return axios.get(`https://api-cua-tui/posts/${params.id}`)
      .then((res) => {
        // L∆∞u res.data.title v√†o data { title } c·ªßa page component
        return { title: res.data.title };
      })
      .catch((e) => {
        // Chuy·ªÉn v·ªÅ trang 404
        error({ statusCode: 404, message: 'Post not found' }); 
      });
  },
}



